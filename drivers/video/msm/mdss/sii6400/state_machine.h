/*
  SiI6400 Linux Driver

  Copyright (C) 2012-2013 Silicon Image, Inc.

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License as
  published by the Free Software Foundation version 2.

  This program is distributed "AS-IS" WITHOUT ANY WARRANTY of any
  kind, whether express or implied; INCLUDING without the implied warranty
  of MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE or NON-INFRINGEMENT.
  See the GNU General Public License for more details at
  http://www.gnu.org/licenses/gpl-2.0.html.
*/

#ifndef _STATE_MACHINE_H
#define _STATE_MACHINE_H

#include "osal.h"
#include "host_msg.h"

/* These values are in msec */
#define WAIT_TIME_FOR_STATE_MACHINE_REQUEST			5000
#define WAIT_TIME_FOR_STATE_MACHINE_QUEUE_FAILURE		1000

/* If the state machine sends a request to the firmware, add that timeout */
#define WAIT_TIME_FOR_GET_CHIP_VERSION_RESPONSE                 \
		(2000 + HM_GET_CHIP_VERSION_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_FIRMWARE_VERSION_RESPONSE             \
		(2000 + HM_GET_FW_VERSION_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_WIHD_ID_IMPEDANCE_RESPONSE            \
		(2000 + HM_MHL_MEASURE_ID_IMPEDANCE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_REMOTE_MAC_ADDR_RESPONSE              2500
#define WAIT_TIME_FOR_GET_REMOTE_CATEGORY_RESPONSE              2500
#define WAIT_TIME_FOR_GET_REMOTE_MANUFACTURER_RESPONSE          2500
#define WAIT_TIME_FOR_GET_REMOTE_MONITOR_NAME_RESPONSE          \
		(2000 + HM_REMOTE_DEV_GET_MONITOR_NAME_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_REMOTE_NAME_RESPONSE                  2500
#define WAIT_TIME_FOR_GET_REMOTE_TYPE_RESPONSE                  2500
#define WAIT_TIME_FOR_GET_SIGNAL_STRENGTH_RESPONSE              \
		(2000 + HM_REMOTE_DEV_GET_SIGNAL_STRENGTH_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MAC_ADDR_RESPONSE                     \
		(2000 + HM_LOCAL_DEV_GET_MAC_ADDR_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_NAME_RESPONSE                         \
		(2000 + HM_LOCAL_DEV_SET_NAME_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_NAME_RESPONSE                         \
		(2000 + HM_LOCAL_DEV_GET_NAME_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_WVAN_SCAN_DURATION_RESPONSE           2500
#define WAIT_TIME_FOR_GET_WVAN_SCAN_DURATION_RESPONSE           2500
#define WAIT_TIME_FOR_SET_WVAN_SCAN_INTERVAL_RESPONSE           2500
#define WAIT_TIME_FOR_GET_WVAN_SCAN_INTERVAL_RESPONSE           2500
#define WAIT_TIME_FOR_SCAN_FOR_WVANS_RESPONSE                   2500
#define WAIT_TIME_FOR_GET_WVAN_SCAN_STATUS_RESPONSE             4000
#define WAIT_TIME_FOR_JOIN_WVAN_RESPONSE                        \
		(2000 + HM_WVAN_JOIN_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_LEAVE_WVAN_RESPONSE                       \
		(2000 + HM_WVAN_LEAVE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_WVAN_INFO_RESPONSE                    2500
#define WAIT_TIME_FOR_GET_CONNECTION_STATUS_RESPONSE            \
		(2000 + HM_REMOTE_CONNECTION_STATUS_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_DEVICE_LIST_RESPONSE                  \
		(2000 + HM_GET_DEV_LIST_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_WIHD_CONNECT_RESPONSE                     \
		(2000 + HM_REMOTE_DEV_CONNECT_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_WIHD_DISCONNECT_RESPONSE                  \
		(2000 + HM_REMOTE_DEV_DISCONNECT_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_CEC_SEND_MSG_RESPONSE                     \
		(2000 + HM_CEC_MSG_SEND_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_WIHD_RC_RCVD_CTRLCODE_RESPONSE        2500
#define WAIT_TIME_FOR_GET_WIHD_RC_SENT_CTRLCODE_RESPONSE        2500
#define WAIT_TIME_FOR_SEND_WIHD_RC_CTRLCODE_RESPONSE            \
		(2000 + HM_CEC_MSG_SEND_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_HDCP_POLICY_RESPONSE                  \
		(2000 + HM_HDCP_SET_POLICY_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_HDCP_POLICY_RESPONSE                  \
		(2000 + HM_HDCP_GET_POLICY_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_HDCP_STREAM_TYPE_RESPONSE             \
		(2000 + HM_HDCP_SET_STREAM_TYPE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_HDCP_STREAM_TYPE_RESPONSE             \
		(2000 + HM_HDCP_GET_STREAM_TYPE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_REMOTE_FW_UPDATE_RESPONSE             2500
#define WAIT_TIME_FOR_GET_VENDOR_MSG_FILTER_RESPONSE            \
		(2000 + HM_GET_VENDOR_MSG_FILTER_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_VENDOR_MSG_FILTER_RESPONSE            \
		(2000 + HM_SET_VENDOR_MSG_FILTER_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_VENDOR_MSG_VENDOR_ID_RESPONSE         2500
#define WAIT_TIME_FOR_SET_VENDOR_MSG_MAC_ADDR_RESPONSE          2500
#define WAIT_TIME_FOR_SEND_VENDOR_MSG_RESPONSE                  \
		(2000 + HM_SEND_VENDOR_MSG_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_CONNECTION_STATE_RESPONSE         \
		(2000 + HM_MHL_GET_CONNECTION_STATE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_ID_IMPEDANCE_RESPONSE             \
		(2000 + HM_MHL_MEASURE_ID_IMPEDANCE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_MHL_LOCAL_DEVCAP_RESPONSE             \
		(2000 + HM_MHL_DEVCAP_LOCAL_WRITE_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_LOCAL_DEVCAP_RESPONSE             \
		(2000 + HM_MHL_DEVCAP_LOCAL_READ_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_MHL_LOCAL_DEVCAP_OFFSET_RESPONSE      2500
#define WAIT_TIME_FOR_GET_MHL_LOCAL_DEVCAP_OFFSET_RESPONSE      2500
#define WAIT_TIME_FOR_GET_MHL_REMOTE_DEVCAP_RESPONSE            \
		(2000 + HM_MHL_DEVCAP_REMOTE_READ_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_SET_MHL_REMOTE_DEVCAP_OFFSET_RESPONSE     2500
#define WAIT_TIME_FOR_GET_MHL_REMOTE_DEVCAP_OFFSET_RESPONSE     2500
#define WAIT_TIME_FOR_SEND_MHL_UCP_CHARCODE_RESPONSE            \
		(2000 + HM_MHL_SEND_UCP_CHAR_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_UCP_RCVD_CHARCODE_RESPONSE        2500
#define WAIT_TIME_FOR_GET_MHL_UCP_SENT_CHARCODE_RESPONSE        2500
#define WAIT_TIME_FOR_SEND_MHL_UCP_ACK_RESPONSE                 \
		(2000 + HM_MHL_SEND_UCP_ACK_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_UCP_ACK_RESPONSE                  2500
#define WAIT_TIME_FOR_SEND_MHL_RCP_KEYCODE_RESPONSE             \
		(2000 + HM_MHL_SEND_RCP_KEY_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_RCP_RCVD_KEYCODE_RESPONSE         2500
#define WAIT_TIME_FOR_GET_MHL_RCP_SENT_KEYCODE_RESPONSE         2500
#define WAIT_TIME_FOR_SEND_MHL_RCP_ACK_RESPONSE                 \
		(2000 + HM_MHL_SEND_RCP_ACK_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_RCP_ACK_RESPONSE                  2500
#define WAIT_TIME_FOR_SEND_MHL_RAP_ACTIONCODE_RESPONSE          \
		(2000 + HM_MHL_SEND_RAP_ACTION_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_RAP_RCVD_ACTIONCODE_RESPONSE      2500
#define WAIT_TIME_FOR_GET_MHL_RAP_SENT_ACTIONCODE_RESPONSE      2500
#define WAIT_TIME_FOR_SEND_MHL_RAP_ACK_RESPONSE                 \
		(2000 + HM_MHL_SEND_RAP_ACK_RESPONSE_TIMEOUT)
#define WAIT_TIME_FOR_GET_MHL_RAP_ACK_RESPONSE                  2500
#define WAIT_TIME_FOR_GET_DIAG_COMMAND_RESPONSE                 2500
#define WAIT_TIME_FOR_SEND_DIAG_COMMAND_RESPONSE                2500
#define WAIT_TIME_FOR_GET_DIAG_COMMAND_SYNC_RESPONSE            2500
#define WAIT_TIME_FOR_SEND_DIAG_COMMAND_SYNC_RESPONSE           60000
#define WAIT_TIME_FOR_GET_DIAG_COMMAND_OUTPUT_RESPONSE          2500
#define WAIT_TIME_FOR_SET_DEBUG_OUTPUT_PATH_RESPONSE            10000

#define STATE_MACHINE_QUEUE_SIZE	50
#define RESPONSE_QUEUE_SIZE		1

enum sm_request {
	SII_SM_REQ_GET_CHIP_VERSION = 1,
	SII_SM_REQ_GET_FIRMWARE_VERSION,
	SII_SM_REQ_GET_WIHD_ID_IMPEDANCE,
	SII_SM_REQ_GET_REMOTE_MAC_ADDR,
	SII_SM_REQ_GET_REMOTE_CATEGORY,
	SII_SM_REQ_GET_REMOTE_MANUFACTURER,
	SII_SM_REQ_GET_REMOTE_MONITOR_NAME,
	SII_SM_REQ_GET_REMOTE_NAME,
	SII_SM_REQ_GET_REMOTE_TYPE,
	SII_SM_REQ_SET_REMOTE_FW_UPDATE,
	SII_SM_REQ_GET_SIGNAL_STRENGTH,
	SII_SM_REQ_GET_MAC_ADDR,
	SII_SM_REQ_SET_NAME,
	SII_SM_REQ_GET_NAME,
	SII_SM_REQ_SET_VENDOR_MSG_RECV_FILTER,
	SII_SM_REQ_GET_VENDOR_MSG_RECV_FILTER,
	SII_SM_REQ_SET_VENDOR_MSG_VENDOR_ID,
	SII_SM_REQ_SET_VENDOR_MSG_MAC_ADDR,
	SII_SM_REQ_SEND_VENDOR_MSG,
	SII_SM_REQ_SET_WVAN_SCAN_DURATION,
	SII_SM_REQ_GET_WVAN_SCAN_DURATION,
	SII_SM_REQ_SET_WVAN_SCAN_INTERVAL,
	SII_SM_REQ_GET_WVAN_SCAN_INTERVAL,
	SII_SM_REQ_SCAN_FOR_WVANS,
	SII_SM_REQ_GET_WVAN_SCAN_STATUS,
	SII_SM_REQ_JOIN_WVAN,
	SII_SM_REQ_LEAVE_WVAN,
	SII_SM_REQ_GET_WVAN_INFO,
	SII_SM_GET_CONNECTION_STATUS,
	SII_SM_GET_DEVICE_LIST,
	SII_SM_REQ_WIHD_CONNECT,
	SII_SM_REQ_WIHD_DISCONNECT,
	SII_SM_REQ_CEC_SEND_MSG,
	SII_SM_REQ_GET_WIHD_RC_RCVD_CTRLCODE,
	SII_SM_REQ_GET_WIHD_RC_SENT_CTRLCODE,
	SII_SM_REQ_SEND_WIHD_RC_CTRLCODE,
	SII_SM_REQ_SET_HDCP_POLICY,
	SII_SM_REQ_GET_HDCP_POLICY,
	SII_SM_REQ_SET_HDCP_STREAM_TYPE,
	SII_SM_REQ_GET_HDCP_STREAM_TYPE,
	SII_SM_REQ_REPORT_SCAN_RESULTS,
	SII_SM_REQ_REPORT_ASSOCIATED,
	SII_SM_REQ_REPORT_DEV_LIST_CHANGED,
	SII_SM_REQ_REPORT_DISASSOCIATED,
	SII_SM_REQ_REPORT_CONNECTED,
	SII_SM_REQ_REPORT_DISCONNECTED,
	SII_SM_REQ_REPORT_CEC_MSG_RECEIVED,
	SII_SM_REQ_REPORT_VENDOR_MSG_RECEIVED,
	SII_SM_REQ_GET_MHL_DEV_TYPE,
	SII_SM_REQ_GET_MHL_CONNECTION_STATE,
	SII_SM_REQ_GET_MHL_ID_IMPEDANCE,
	SII_SM_REQ_SET_MHL_CLOCK_SWING,
	SII_SM_REQ_GET_MHL_CLOCK_SWING,
	SII_SM_REQ_SET_MHL_CBUS_VOLTAGE,
	SII_SM_REQ_SET_MHL_LOCAL_DEVCAP,
	SII_SM_REQ_GET_MHL_LOCAL_DEVCAP,
	SII_SM_REQ_SET_MHL_LOCAL_DEVCAP_OFFSET,
	SII_SM_REQ_GET_MHL_LOCAL_DEVCAP_OFFSET,
	SII_SM_REQ_GET_MHL_REMOTE_DEVCAP,
	SII_SM_REQ_SET_MHL_REMOTE_DEVCAP_OFFSET,
	SII_SM_REQ_GET_MHL_REMOTE_DEVCAP_OFFSET,
	SII_SM_REQ_SEND_MHL_UCP_CHARCODE,
	SII_SM_REQ_GET_MHL_UCP_RCVD_CHARCODE,
	SII_SM_REQ_GET_MHL_UCP_SENT_CHARCODE,
	SII_SM_REQ_SEND_MHL_UCP_ACK,
	SII_SM_REQ_GET_MHL_UCP_ACK,
	SII_SM_REQ_SEND_MHL_RCP_KEYCODE,
	SII_SM_REQ_GET_MHL_RCP_RCVD_KEYCODE,
	SII_SM_REQ_GET_MHL_RCP_SENT_KEYCODE,
	SII_SM_REQ_SEND_MHL_RCP_ACK,
	SII_SM_REQ_GET_MHL_RCP_ACK,
	SII_SM_REQ_SEND_MHL_RAP_ACTIONCODE,
	SII_SM_REQ_GET_MHL_RAP_RCVD_ACTIONCODE,
	SII_SM_REQ_GET_MHL_RAP_SENT_ACTIONCODE,
	SII_SM_REQ_SEND_MHL_RAP_ACK,
	SII_SM_REQ_GET_MHL_RAP_ACK,
	SII_SM_REQ_REPORT_MHL_CONNECTED,
	SII_SM_REQ_REPORT_MHL_DISCONNECTED,
	SII_SM_REQ_REPORT_MHL_SPAD_MSG_RCV,
	SII_SM_REQ_REPORT_MHL_UCP_CHAR_RCV,
	SII_SM_REQ_REPORT_MHL_UCP_ACK_RCV,
	SII_SM_REQ_REPORT_MHL_RCP_KEY_RCV,
	SII_SM_REQ_REPORT_MHL_RCP_ACK_RCV,
	SII_SM_REQ_REPORT_MHL_RAP_ACTION_RCV,
	SII_SM_REQ_REPORT_MHL_RAP_ACK_RCV,
	SII_SM_REQ_REPORT_MHL_VBUS_POWER_REQUEST_RCV,
	SII_SM_REQ_GET_DIAG_COMMAND,
	SII_SM_REQ_SEND_DIAG_COMMAND,
	SII_SM_REQ_GET_DIAG_COMMAND_SYNC,
	SII_SM_REQ_SEND_DIAG_COMMAND_SYNC,
	SII_SM_REQ_GET_DIAG_COMMAND_OUTPUT,
	SII_SM_REQ_SET_DEBUG_OUTPUT_PATH,
	SII_SM_REQ_REPORT_DIAG_CMD_DONE,
	SII_SM_REQ_REPORT_DIAG_CMD_OUTPUT,
	SII_SM_REQ_REPORT_DEBUG_OUTPUT,
	SII_SM_REQ_REPORT_MHL_DCAP_CHG,
	SII_SM_REQ_NOP,
};

struct state_machine_request {
	enum sm_request request_type;
	void *data;
	uint32_t data_size;
	struct SiiOsQueue *response_queue;
};

struct state_machine_response {
	enum sm_request request_type;
	enum sii_os_status resp_status;
	void *data;
	uint32_t data_size;
};

struct sm_work {
	struct work_struct state_machine_work;
};

extern struct SiiOsQueue *wihd_sm_queue;
extern struct SiiOsQueue *mhl_sm_queue;
extern struct SiiOsQueue *diag_sm_queue;

enum sii_os_status sm_send_request(struct SiiOsQueue *sm_queue,
				enum sm_request request_type,
				void *req_data, uint32_t req_data_size,
				struct SiiOsQueue *resp_queue,
				int32_t resp_timeout,
				void **resp_data, uint32_t *resp_data_size);
enum sii_os_status send_hostmsg_command(uint16_t cmdcode, uint16_t cmddatalen,
				void *cmddata, uint32_t resp_timeout,
				uint16_t *resp_data_size, void **resp_data);
enum sii_os_status sii6400_wihd_sm_start(void);
enum sii_os_status sii6400_mhl_sm_start(void);
enum sii_os_status sii6400_diag_sm_start(void);
int sii6400_sm_init(void);
void sii6400_sm_exit(void);

#endif /* !_STATE_MACHINE_H */

